---
published: true
layout: post
title: buig logs naar je wil
category: advanced
---

@git log@ is een extreem krachtig commando met veel opties die je helpen om uit te vinden wat voor werk er is verricht op je @repository@ en wie het heeft verricht. Dit bericht somt een aantal van de meest nuttige opties op. Het grootste deel van deze tips zijn verkregen uit Scott Chacon's "gitcast on git log":http://gitcasts.com/posts/git-log en R. Tyler Ballance's "git protip series":http://unethicalblogger.com/posts/2008/12/git_protip_learning_your_history_git_log.

@git log -<n>@

Laat het @log@ zien voor @n@ @commits@. Bijvoorbeeld, @git log -2@ toont de laatste twee @commits@.

@git log --stat@

Laat het @log@ zien met output voor gewijzigde bestanden en toevoegingen/verwijderingen. In essentie de normale output van @git commit@ toegevoegd aan ieder bericht.

@git log --name-status@

Voegt een SVN-achtig @add/modified/deleted@ toe voor iedere @commit@. Erg basaal maar geeft toch een redelijk beeld van wat er is gewijzigd.

@git log --pretty=oneline@

Perst iedere @commit@ samen tot zijn SHA1 en de boodschap op een regel. Pijp naar @wc -l@ als je het aantal @commits@ wilt tellen!

@git log origin..HEAD@

Bekijk of er @commits@ zijn die nog niet naar je @origin@ remote zijn @ge-push-d@. (Bedankt voor de tip, Ryan Bates!)

@git log <file>@

Bekijk alle @commits@ die uitsluitend het gegeven bestand hebben aangeraakt.

@git log --no-merges --author=dave@

Bekijk alle @commits@ waar Dave aan heeft gewerkt, en negeer daarbij iedere @merge commit@ om de hoeveelheid ruis te reduceren.

@git log --since="1 week ago"@

Bekijk de @commits@ gedaan sinds vorige week. Kan makkelijk vervangen worden met @yesterday@, @1 year ago@, @3 months ago@, @1/20/09@ en zo verder. Er zijn ook andere tijd gebaseerde opties: @--after@, @--until@, en @--before@ als je creatief wilt worden.

@git log --grep='^Bump'@

Zoek door je @commit@ berichten om die berichten te vinden die beginnen met de string "Bump". Dit kan een willekeurige reguliere expressie zijn, dus wanneer je zoekt naar een @commit@ die je hebt gedaan en alles wat je je kunt herinneren is een deel van het bericht, @--grep@ zal het vinden.

@git --no-pager log@

Wil je geen @less@ gebruiken om je @commits@ te bekijken? Deze optie zal je de ruwe output geven als je dat nodig hebt. 

Natuurlijk, bekijk de "manpage":http://www.kernel.org/pub/software/scm/git/docs/git-log.html om te zien wat de opties zijn die je tot je beschikking hebt. Als je een goede tip hebt die over het hoofd is gezien en je wilt delen, laat het ons weten in het commentaar en ik zal dit bericht aanpassen.


